[tool.poetry]
name = "lexinetz"
version = "0.1.0"
description = "lexninetz is an experimental project that employs knowledge graphs and agent-based reflection for natural language translation using multi-lingual language models."
authors = ["Anirban Basu <anirbanbasu@users.noreply.github.com>"]
license = "Apache-2.0"
readme = "README.md"
package-mode = false
repository = "https://github.com/anirbanbasu/lexinetz"
keywords = ["agent", "reflection", "translation", "language-translation", "artificial-intelligence", "knowledge-graph", "large-language-models", "llms", "agentic-workflow", "machine-translation"]

[tool.poetry.dependencies]
python = "^3.12"
llama-index-core = "^0.10.44"
pytest = "^8.2.2"
solara = "^1.33.0"
llama-index-llms-ollama = "^0.1.5"
llama-index-llms-cohere = "^0.2.0"
llama-index-llms-openai = "^0.1.22"
python-dotenv = "^1.0.1"
icecream = "^2.1.3"

[tool.ruff]
# Set the maximum line length to 79.
line-length = 79
indent-width = 4
exclude = [".venv", ".env", ".git", "tests", "eval"]

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    # "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
fixable = ["ALL"]
ignore = ["SIM117"]

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2
known-first-party = ["translation-agent"]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["E402", "F401"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
